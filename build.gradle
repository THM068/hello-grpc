plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.google.protobuf" version "0.8.5"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}



version "0.1"
group "helloworld.grpc"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}
def arrow_version = "0.9.1-SNAPSHOT"
dependencies {
    compile "io.micronaut.grpc:micronaut-grpc-runtime"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"

    compile group: 'io.arrow-kt', name: 'arrow-core', version: '0.8.2'
    compile group: 'io.arrow-kt', name: 'arrow-data', version: '0.8.2'
    compile group: 'io.arrow-kt', name: 'arrow-typeclasses', version: '0.9.0'
    compile group: 'io.arrow-kt', name: 'arrow-typeclasses', version: '0.9.0'
    compile group: 'io.arrow-kt', name: 'arrow-core-extensions', version: '0.9.0'

    
}

test.classpath += configurations.developmentOnly

mainClassName = "helloworld.grpc.Application"

ext {
    protocVersion="3.5.1"
    grpcVersion="1.18.0"

}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
